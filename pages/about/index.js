import Head from 'next/head'
import Image from 'next/image'
import Link from 'next/link'
import { useRouter } from 'next/router'
import { useState , useEffect } from 'react'


export default function About(props) {
    const {users} = props
    let data =  users?.data
    console.log(users)
    const [pages , setPages] = useState([])
    let router = useRouter()

    console.log(router.query)

    const myLoader = () => {
        return `https://external-content.duckduckgo.com/iu/?u=http%3A%2F%2Fgifimage.net%2Fwp-content%2Fuploads%2F2017%2F02%2FLoading-GIF-Image-14.gif&f=1&nofb=1&ipt=2db175b60d93a4088560f973779f988bdccd47907beff2449fbe356316c69d2a&ipo=images`
    }

    useEffect(()=>{
        renderLi()
    } , [router.query])


    const changePage = (page) =>{
        router.push(`/about?page=${page}&per_page=${router.query.per_page ? router.query.per_page : users.per_page}`)
    }   


    const changePerpage = (per_page) =>{
        router.push(`/about?page=${1}&per_page=${per_page}`)
    }   
      

    const renderLi = () => {
        let pageArr = []
        for (let i = 1; i <= users.total_pages;  i++) {
            pageArr.push(i)
        }
        setPages(pageArr)
    }


  return (
    <div>
      <Head>
        <title>About page</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="title" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

    
        <div className='container mt-5'>
            <div className='row'>
            {data?.map((user)=>{
                return(
                    <Link className='col-md-3 mb-4' href={`/user/${user.id}`} key={user.id}>
                        <div className='card ' >
                            <div className='card-body'>
                                <Image
                                    style={{
                                        width:'100%',
                                        height:'auto',
                                        objectFit:'contain'
                                    }}
                                    className='card-image w-100'
                                    src={user.avatar}
                                    width={100}
                                    height={100}
                                    alt={`"Picture of the ${user.first_name}`}
                                />
                                <div>
                                    {user.first_name}
                                    {user.last_name}
                                </div>
                            </div>
                        </div>

                    </Link>
                )
            })}
        </div>
        </div>


        <div className='container mb-4'>
            <div className='card w-100'>
                <div className='card-body d-flex justify-content-center'>
                <div className='col-2 me-2'>
                    <select 
                    
                    onChange={(e)=> {
                        changePerpage(e.target.value)
                    }} class="form-select" aria-label="Per Page">
                        <option selected={users.per_page == 3} value="3">3 person</option>
                        <option selected={users.per_page == 6} value="6">6 person</option>
                        <option  selected={users.per_page == 12} value="12">12 person</option>
                    </select>
                </div>
                <nav aria-label="Page navigation example">
                    <ul class="pagination">
                        <li onClick={()=> users.page != 1 ? changePage(users.page -1) : console.log('prev not allowed') } class={`page-item ${users.page == 1 && 'disabled'}`}><a class="page-link" tabindex="-1" 
                        >Previous</a></li>
                        {pages.length > 0 ?
                            pages.map((p , i)=>(
                                <li onClick={()=> changePage(p)  } key={i} class={`page-item ${users.page == p ? 'active': ''}`}><span class="page-link" >{p}</span></li>
                            )) : ''
                        }           
                        <li onClick={()=> users.page != users.total_pages ? changePage(users.page  + 1) : console.log('Next not allowed') } class={`page-item ${users.page == users.total_pages ? 'disabled' :''}`}><a class="page-link" tabindex="-1"
                        >Next</a></li>
                    </ul>
                </nav>
                </div>
            </div>
        </div>
    
    </div>
  )
}



// export async function getStaticProps() {
//     // Call an external API endpoint to get posts.
//     // You can use any data fetching library
//     const res = await fetch('https://reqres.in/api/users')
//     const users = await res.json()
    
//     // By returning { props: { posts } }, the Blog component
//     // will receive `posts` as a prop at build time
//     return {
//       props: {
//         users,
//       },
//     }
//   }
  



export async function getServerSideProps(context) {
    let  {page , per_page} = context.query

    const res = await fetch(`https://reqres.in/api/users?page=${page}&per_page=${per_page}`)
    const user = await res.json()

    
    return {
      props: { users: user }, // will be passed to the page component as props
    }
}